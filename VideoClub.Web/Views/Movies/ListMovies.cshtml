@model X.PagedList.IPagedList<VideoClub.Web.Models.Movies.ListMovieViewModel>
@using X.PagedList.Mvc.Core;
@using X.PagedList;

<h2>All Movies</h2>

@using (Html.BeginForm("ListMovies", "Movies", FormMethod.Get))
{
    <p>
        Search by Genre:
        <select asp-for="SelectedGenre" class="form-control" name="genre">
            <option value="">Select Genre</option>
            @foreach (var genre in Enum.GetValues(typeof(VideoClub.Core.Enumerations.Genre)))
            {
                <option value="@genre">@genre</option>
            }
        </select>
    </p>
    <p>
        Search by Title: @Html.TextBox("search", null, new { @class = "form-control" })
        <input type="submit" value="Search" />
    </p>
}

    <table class="table">
        <tr>
            <th>
                Title
            </th>
            <th>
                Genre
            </th>
            <th>
                Description
            </th>
            <th>
                Available Copy Count
            </th>
            @if ((User.Identity.IsAuthenticated && User.IsInRole("Admin")))
            {
                <th>
                    Create a Movie Rent
                </th>
            }

        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.MovieTitle)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MovieGenre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MovieDescription)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.availableCopyCount)
                </td>
                @if ((User.Identity.IsAuthenticated && User.IsInRole("Admin")))
                {
                    <td>
                        @if (item.availableCopyCount > 0)
                        {
                            @Html.ActionLink("Rent", "CreateMovieRentAdmin", "MovieRents", new { movieId = item.MovieId }, new { @class = "btn btn-dark"})
                        }
                    </td>
                }
            </tr>
        }

    </table>

<br />

Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("ListMovies", new {page}))
